Queue data structure
                                       Implementation of queue      
                                     The program that implements the queue using an array
#include <iostream>
using namespace std;
int queue[100], n = 100, head = - 1, tail = - 1;
void Enqueue() {
   int val;
   if (tail == n - 1)
   cout<<"Queue Overflow"<<endl;
   else {
      if (head == - 1)
      head = 0;
      cout<<"Insert the element in queue : "<<endl;
      cin>>val;
      tail++;
      queue[tail] = val;
   }
}
void Dequeue() {
   if (head == - 1 || head > tail) {
      cout<<"Queue Underflow ";
      return ;
   } else {
      cout<<"Element deleted from queue is : "<< queue[head] <<endl;
      head++;
   }
}
void Display() {
   if (head == - 1)
   cout<<"Queue is empty"<<endl;
   else {
      cout<<"Queue elements are : ";
      for (int i = head; i <= tail; i++)
      cout<<queue[i]<<" ";
         cout<<endl;
   }
}
int main() {
   int i;
   for(i=0;i<5;i++) Enqueue();
   Dequeue();
   Dequeue();
   Display();    
   return 0;
}


Insert the element in queue : 
1
Insert the element in queue : 
2
Insert the element in queue : 
3
Insert the element in queue : 
4
Insert the element in queue : 
5
Element deleted from queue is : 1
Element deleted from queue is : 2
Queue elements are : 3 4 5



